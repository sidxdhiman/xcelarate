/**
 * General error, formatted as a message in red text when caught by expo-cli (no stack trace is printed). Should be used in favor of `log.error()` in most cases.
 */
export declare class CommandError extends Error {
    code: string;
    name: string;
    readonly isCommandError = true;
    constructor(code: string, message?: string);
}
export declare class AbortCommandError extends CommandError {
    constructor();
}
/**
 * Used to end a CLI process without printing a stack trace in the Expo CLI. Should be used in favor of `process.exit`.
 */
export declare class SilentError extends CommandError {
    constructor(messageOrError?: string | Error);
}
export declare function logCmdError(error: any): never;
/** This should never be thrown in production. */
export declare class UnimplementedError extends Error {
    constructor();
}
